// 如果要将一个已经声明的变量用于解构赋值,必须非常小心
// 报错
// let x;
// { x }={ x: 1 };
// 因为javascript引擎会将{x}理解成一个代码块,从而发生错误.只有不将大括号写在行首,避免javascript将其解释为代码块,才能解决这个问题
let x;
({ x } = { x: 1 });
console.log(x);
// 解构赋值允许等号左边的模式之中,不放置任何变量名.因此,可以写出非常古怪的赋值表达式
({} = [true, false]);
({} = "abc");
({} = []);
// 对象的解构赋值,可以很方便的将现有对象的方法,赋值到某个变量
let { log, sin, cos } = Math;
// 上面代码将Math对象的对数、正弦、余弦三个方法,赋值到对应的变量上,使用起来就会方便很多.

// 由于数组本质是特殊的对象,因此可以对数组进行对象属性的解构
let arr = [1, 2, 3];
let { 0: first, [arr.length - 1]: last } = arr;
console.log(first);
console.log(last);